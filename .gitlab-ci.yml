image: docker:latest

stages:
  - build
  - test
  - deploy

services:
  - docker:dind

build image:
  stage: build
  before_script: docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY || true
  script:
    - >
      docker build .
      --tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF
      --tag $CI_REGISTRY_IMAGE:$CI_BUILD_REF_SLUG
    - docker push $CI_REGISTRY_IMAGE:$CI_BUILD_REF
    - docker push $CI_REGISTRY_IMAGE:$CI_BUILD_REF_SLUG

linting:
  stage: test
  script: docker run $CI_REGISTRY_IMAGE:$CI_BUILD_REF npm run lint

unit tests:
  stage: test
  script: docker run $CI_REGISTRY_IMAGE:$CI_BUILD_REF npm run test:unit:coverage
  coverage: '/^Statements\s*:\s*([^%]+)/'

e2e tests:
  stage: test
  script: docker run $CI_REGISTRY_IMAGE:$CI_BUILD_REF npm run test:e2e:ci

deploy staging:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$STAGING_PRIVKEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo "$STAGING_SERVER_PUBKEY" > ~/.ssh/known_hosts
  script:
    - ssh -o PasswordAuthentication=no -o PreferredAuthentications=publickey -i ~/.ssh/id_rsa $STAGING_SERVER_USER@$STAGING_SERVER "$STAGING_DEPLOY_CMD"
  environment: staging
  only:
    - master
