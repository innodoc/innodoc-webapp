image: node:latest

stages:
  - setup
  - build
  - test
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
  - node_modules/
  - src/.next/
  - .env

variables:
  GIT_SUBMODULE_STRATEGY: recursive

install_node_modules:
  stage: setup
  script:
    - npm install

build_next:
  stage: build
  script:
    - cp .env.example .env
    - npm run build

lint:
  stage: test
  script: npm run lint

jest:
  stage: test
  script: npm run test:coverage
  coverage: '/^Statements\s*:\s*([^%]+)/'

deploy_staging:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$STAGING_PRIVKEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo "$STAGING_SERVER_PUBKEY" > ~/.ssh/known_hosts
  script:
    - cat ~/.ssh/known_hosts
    - ssh -tt -o UserKnownHostsFile=~/.ssh/id_rsa -o PasswordAuthentication=no -o PreferredAuthentications=publickey -i ~/.ssh/id_rsa $STAGING_SERVER_USER@$STAGING_SERVER "cd ~/veundmint-docker && docker-compose build --no-cache --build-arg CONTENT_ROOT=$STAGING_CONTENT_ROOT innodoc-webapp-staging && docker-compose restart innodoc-webapp-staging"
  environment: staging
  only:
    - gitlab-cd-deploy
