image: docker:latest

stages:
  - build
  - test
  - release
  - deploy

.docker-base: &docker-base
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY || true
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_DRIVER: overlay2
    IMAGE_TAG: $CI_REGISTRY_IMAGE/staging:$CI_COMMIT_REF_SLUG
    IMAGE_E2E_CACHE_TAG: $CI_REGISTRY_IMAGE/e2e:cache
    IMAGE_E2E_TAG: $CI_REGISTRY_IMAGE/e2e:$CI_COMMIT_REF_SLUG
    IMAGE_RELEASE_TAG: $CI_REGISTRY_IMAGE:latest

build image:
  <<: *docker-base
  stage: build
  script:
    - docker pull $IMAGE_RELEASE_TAG || true
    - docker pull $IMAGE_TAG || true
    - docker build --pull --cache-from $IMAGE_RELEASE_TAG --cache-from $IMAGE_TAG --tag $IMAGE_TAG .
    - docker push $IMAGE_TAG

e2e tests:
  <<: *docker-base
  stage: test
  script:
    - docker pull $IMAGE_E2E_CACHE_TAG || true
    - docker build --pull --cache-from $IMAGE_E2E_CACHE_TAG --tag $IMAGE_E2E_TAG -f Dockerfile.e2e .
    - docker tag $IMAGE_E2E_TAG $IMAGE_E2E_CACHE_TAG
    - docker push $IMAGE_E2E_CACHE_TAG
    - docker run $IMAGE_E2E_TAG

release image:
  <<: *docker-base
  stage: release
  script:
    - docker pull $IMAGE_TAG
    - docker tag $IMAGE_TAG $IMAGE_RELEASE_TAG
    - docker push $IMAGE_RELEASE_TAG
  only:
    - master

deploy staging:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - mkdir -p ~/.ssh
    - echo "$STAGING_PRIVKEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo "$STAGING_SERVER_PUBKEY" > ~/.ssh/known_hosts
  script:
    - ssh -o PasswordAuthentication=no -o PreferredAuthentications=publickey -i ~/.ssh/id_rsa $STAGING_SERVER_USER@$STAGING_SERVER "$STAGING_DEPLOY_CMD"
  environment: staging
  only:
    - master
