[{"t": "Para", "c": [{"t": "Str", "c": "An input field is presented for text input questions."}]}, {"t": "Para", "c": [{"t": "Str", "c": "The answer can be evaluated in different ways (parameter "}, {"t": "Code", "c": [["", [], []], "validation"]}, {"t": "Str", "c": "). Furthermore all text inputs accept the parameter "}, {"t": "Code", "c": [["", [], []], "length"]}, {"t": "Str", "c": "."}]}, {"t": "Table", "c": [["", [], []], [null, []], [[{"t": "AlignLeft"}, {"t": "ColWidthDefault"}], [{"t": "AlignLeft"}, {"t": "ColWidthDefault"}]], [["", [], []], []], [[["", [], []], 0, [], [[["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "length"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "The maximum number of characters that can be entered."}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "validation"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "How "}, {"t": "Code", "c": [["", [], []], "solution"]}, {"t": "Str", "c": " is evaluated."}]}]]]]]]], [["", [], []], []]]}, {"t": "Header", "c": [2, ["exact", [], []], [{"t": "Str", "c": "Exact"}]]}, {"t": "BlockQuote", "c": [{"t": "Para", "c": [{"t": "Code", "c": [["", [], []], "validation=\"exact\""]}]}]}, {"t": "Para", "c": [{"t": "Str", "c": "For this type of question, the entered value must match the solution character by character (case-sensitive)."}]}, {"t": "Div", "c": [["EX_TEXT_EXACT", ["exercise"], [["data-number", "2.7.4"]]], [{"t": "Para", "c": [{"t": "Str", "c": "For the correct answer of the question the word "}, {"t": "Emph", "c": [{"t": "Str", "c": "solution"}]}, {"t": "Str", "c": " must be entered exactly."}]}, {"t": "CodeBlock", "c": [["", ["markdown"], []], "Solution: []{.question .text length=\"10\" solution=\"solution\" validation=\"exact\" points=\"3\"}"]}, {"t": "Para", "c": [{"t": "Str", "c": "Solution: "}, {"t": "Span", "c": [["", ["question", "text"], [["length", "10"], ["solution", "solution"], ["validation", "exact"], ["points", "3"]]], []]}]}]]}, {"t": "Header", "c": [2, ["parsed-expression", [], []], [{"t": "Str", "c": "Parsed expression"}]]}, {"t": "BlockQuote", "c": [{"t": "Para", "c": [{"t": "Code", "c": [["", [], []], "validation=\"parsed\""]}]}]}, {"t": "Para", "c": [{"t": "Str", "c": "The input is interpreted as a mathematical expression."}]}, {"t": "Table", "c": [["", [], []], [null, []], [[{"t": "AlignDefault"}, {"t": "ColWidthDefault"}], [{"t": "AlignLeft"}, {"t": "ColWidthDefault"}]], [["", [], []], []], [[["", [], []], 0, [], [[["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "precision"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Accuracy behind the decimal point (further digits are mathematically rounded before comparison)"}]}]]]]]]], [["", [], []], []]]}, {"t": "Div", "c": [["example-2.7.5", ["example"], [["data-number", "2.7.5"]]], [{"t": "CodeBlock", "c": [["", [], []], "::: {.exercise #EX_PARSED_0}\n$\\tfrac{\\alpha+\\beta}{\\alpha-\\beta}$ takes the value []{.question .text validation=\"parsed\" length=\"10\" solution=\"5\" precision=\"3\" points=\"4\"} for $\\alpha=6$ and $\\beta=4$.\n:::"]}, {"t": "Div", "c": [["EX_PARSED_0", ["exercise"], [["data-number", "2.7.6"]]], [{"t": "Para", "c": [{"t": "Math", "c": [{"t": "InlineMath"}, "\\tfrac{\\alpha+\\beta}{\\alpha-\\beta}"]}, {"t": "Str", "c": " takes the value "}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "parsed"], ["length", "10"], ["solution", "5"], ["precision", "3"], ["points", "4"]]], []]}, {"t": "Str", "c": " for "}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\alpha=6"]}, {"t": "Str", "c": " and "}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\beta=4"]}, {"t": "Str", "c": "."}]}]]}]]}, {"t": "Div", "c": [["example-2.7.7", ["example"], [["data-number", "2.7.7"]]], [{"t": "CodeBlock", "c": [["", [], []], "::: {.exercise #EX_PARSED_1}\nTransform the following linear equations and specify their solution sets:\n\n[Enter simply `{a}` for a unit set and `{}` for an empty set.]{.hint-text}\n\n1.  The equation $x-1=1-x$ has the solution set $L$$\\;\\;=\\;$[]{.question .text validation=\"parsed\" length=\"4\" solution=\"1,1\" precision=\"4\" points=\"4\"},\n\n2.  The equation $4x-2=2x+2$ has the solution set $L$$\\;\\;=\\;$[]{.question .text validation=\"parsed\" length=\"4\" solution=\"2,2\" precision=\"4\" points=\"4\"},\n\n3.  The equation $2x-6=2x-10$ has the solution set $L$$\\;\\;=\\;$[]{.question .text validation=\"parsed\" length=\"4\" solution=\"\" precision=\"4\" points=\"4\"}.\n\n:::: {.hint caption=\"Solution\"}\nThe first equation can be transformed into $2x=2$ or $x=1$, respectively, so\nthe solution set is $L=\\lbrace 1\\rbrace$. The second equation can be transformed into $2x=4$ and the solution set is\n$L=\\lbrace 2\\rbrace$. The third equation can be transformed into $-6=-10$ which is a false statement,\nhence $L=\\lbrace\\rbrace$.\n::::\n:::"]}, {"t": "Div", "c": [["EX_PARSED_1", ["exercise"], [["data-number", "2.7.8"]]], [{"t": "Para", "c": [{"t": "Str", "c": "Transform the following linear equations and specify their solution sets:"}]}, {"t": "Para", "c": [{"t": "Span", "c": [["", ["hint-text"], []], [{"t": "Str", "c": "Enter simply "}, {"t": "Code", "c": [["", [], []], "{a}"]}, {"t": "Str", "c": " for a unit set and "}, {"t": "Code", "c": [["", [], []], "{}"]}, {"t": "Str", "c": " for an empty set."}]]}]}, {"t": "OrderedList", "c": [[1, {"t": "Decimal"}, {"t": "Period"}], [[{"t": "Para", "c": [{"t": "Str", "c": "The equation "}, {"t": "Math", "c": [{"t": "InlineMath"}, "x-1=1-x"]}, {"t": "Str", "c": " has the solution set "}, {"t": "Math", "c": [{"t": "InlineMath"}, "L"]}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\;\\;=\\;"]}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "parsed"], ["length", "4"], ["solution", "1,1"], ["precision", "4"], ["points", "4"]]], []]}, {"t": "Str", "c": ","}]}], [{"t": "Para", "c": [{"t": "Str", "c": "The equation "}, {"t": "Math", "c": [{"t": "InlineMath"}, "4x-2=2x+2"]}, {"t": "Str", "c": " has the solution set "}, {"t": "Math", "c": [{"t": "InlineMath"}, "L"]}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\;\\;=\\;"]}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "parsed"], ["length", "4"], ["solution", "2,2"], ["precision", "4"], ["points", "4"]]], []]}, {"t": "Str", "c": ","}]}], [{"t": "Para", "c": [{"t": "Str", "c": "The equation "}, {"t": "Math", "c": [{"t": "InlineMath"}, "2x-6=2x-10"]}, {"t": "Str", "c": " has the solution set "}, {"t": "Math", "c": [{"t": "InlineMath"}, "L"]}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\;\\;=\\;"]}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "parsed"], ["length", "4"], ["solution", ""], ["precision", "4"], ["points", "4"]]], []]}, {"t": "Str", "c": "."}]}]]]}, {"t": "Div", "c": [["", ["hint"], [["caption", "Solution"]]], [{"t": "Para", "c": [{"t": "Str", "c": "The first equation can be transformed into "}, {"t": "Math", "c": [{"t": "InlineMath"}, "2x=2"]}, {"t": "Str", "c": " or "}, {"t": "Math", "c": [{"t": "InlineMath"}, "x=1"]}, {"t": "Str", "c": ", respectively, so the solution set is "}, {"t": "Math", "c": [{"t": "InlineMath"}, "L=\\lbrace 1\\rbrace"]}, {"t": "Str", "c": ". The second equation can be transformed into "}, {"t": "Math", "c": [{"t": "InlineMath"}, "2x=4"]}, {"t": "Str", "c": " and the solution set is "}, {"t": "Math", "c": [{"t": "InlineMath"}, "L=\\lbrace 2\\rbrace"]}, {"t": "Str", "c": ". The third equation can be transformed into "}, {"t": "Math", "c": [{"t": "InlineMath"}, "-6=-10"]}, {"t": "Str", "c": " which is a false statement, hence "}, {"t": "Math", "c": [{"t": "InlineMath"}, "L=\\lbrace\\rbrace"]}, {"t": "Str", "c": "."}]}]]}]]}]]}, {"t": "Header", "c": [2, ["function", [], []], [{"t": "Str", "c": "Function"}]]}, {"t": "BlockQuote", "c": [{"t": "Para", "c": [{"t": "Code", "c": [["", [], []], "validation=\"function\""]}]}]}, {"t": "Para", "c": [{"t": "Str", "c": "The input is interpreted as a mathematical function. It is evaluated at a number of supporting points and compared to the solution. The results must be correct within a configurable margin ("}, {"t": "Code", "c": [["", [], []], "precision"]}, {"t": "Str", "c": ")."}]}, {"t": "Table", "c": [["", [], []], [null, []], [[{"t": "AlignDefault"}, {"t": "ColWidthDefault"}], [{"t": "AlignLeft"}, {"t": "ColWidthDefault"}]], [["", [], []], []], [[["", [], []], 0, [], [[["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "supporting-points"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Number of support points"}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "variables"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Function variables separated by comma (not case-sensitive)"}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "precision"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Number of decimal places for comparison"}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "simplification"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Require specific simplification (see "}, {"t": "Link", "c": [["", [], []], [{"t": "Str", "c": "below"}], ["#simplification", ""]]}, {"t": "Str", "c": ")"}]}]]]]]]], [["", [], []], []]]}, {"t": "Header", "c": [3, ["simplification", [], []], [{"t": "Str", "c": "Require simplification"}]]}, {"t": "Para", "c": [{"t": "Str", "c": "It is possible to require certain simplifications for the input to be accepted as correct. Multiple simplifications can be specified by separating the values with a comma (e. g. "}, {"t": "Code", "c": [["", [], []], "simplification=\"no-brackets,no-sqrt\""]}, {"t": "Str", "c": ")."}]}, {"t": "Table", "c": [["", [], []], [null, []], [[{"t": "AlignLeft"}, {"t": "ColWidth", "c": 0.18666666666666668}], [{"t": "AlignLeft"}, {"t": "ColWidth", "c": 0.8133333333333334}]], [["", [], []], [[["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Value"}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Requirement"}]}]]]]]], [[["", [], []], 0, [], [[["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "\"\""]}, {"t": "Str", "c": " or omitted"}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "No simplification required."}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "no-brackets"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "No brackets allowed."}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "only-one-slash"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Only one slash (fraction line) allowed."}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "antiderivative"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Antiderivative requested: Normalize both terms to "}, {"t": "Math", "c": [{"t": "InlineMath"}, "f(1.234) = 0"]}, {"t": "Str", "c": " (and assume its just one variable)."}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "no-sqrt"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "No root expression allowed ("}, {"t": "Code", "c": [["", [], []], "sqrt(\u2026)"]}, {"t": "Str", "c": "). Note that e. g. "}, {"t": "Code", "c": [["", [], []], "x^(1/2)"]}, {"t": "Str", "c": " can still be used."}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "no-abs"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "No absolute value allowed ("}, {"t": "Code", "c": [["", [], []], "abs(\u2026)"]}, {"t": "Str", "c": "). Individual cases needs to be written down."}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "no-fractions-no-powers"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "No fractions or powers allowed."}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "special-support-points"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Special support points requested: only positive ones and weakly rational, separate variables get separate support points."}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "only-natural-number"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Only natural number allowed."}]}]]]], [["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "one-power-no-mult-or-div"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "At most one "}, {"t": "Code", "c": [["", [], []], "^"]}, {"t": "Str", "c": " and neither "}, {"t": "Code", "c": [["", [], []], "/"]}, {"t": "Str", "c": " nor "}, {"t": "Code", "c": [["", [], []], "*"]}, {"t": "Str", "c": " allowed."}]}]]]]]]], [["", [], []], []]]}, {"t": "Header", "c": [3, ["examples", [], []], [{"t": "Str", "c": "Examples"}]]}, {"t": "Div", "c": [["example-2.7.9", ["example"], [["data-number", "2.7.9"]]], [{"t": "CodeBlock", "c": [["", [], []], "::: {.exercise #EX_FUNCTION_0}\nWhich term is formed if the following object is inserted into the term $x^2+y^2$?\n\n1.  The angle $\\alpha$ both for $x$ and $y$: Then $x^2+y^2$$\\;\\;=\\;$[]{.question .text validation=\"function\" length=\"13\" solution=\"2*alpha^2\" supporting-points=\"5\" variables=\"alpha\" precision=\"5\" points=\"4\"}.\n\n2.  The number $2$ for $y$ and the term $t+1$ for $x$: Then $x^2+y^2$$\\;\\;=\\;$[]{.question .text validation=\"function\" length=\"13\" solution=\"4+(t+1)^2\" supporting-points=\"5\" variables=\"t\" precision=\"5\" points=\"4\"}.\n\n3.  The term $z+1$ for $x$ and the term $z-1$ for $y$: Then $x^2+y^2$$\\;\\;=\\;$[]{.question .text validation=\"function\" length=\"13\" solution=\"2*z*z+2\" supporting-points=\"5\" variables=\"z\" precision=\"5\" points=\"4\"}.\n\n:::: {.hint-text}\nThe Greek letter $\\alpha$ can be entered as `alpha`.\n::::\n\n:::: {.hint caption=\"Solution\"}\nIt is safest to bracket the variables before inserting, if the new term contains several symbols:\n\n1.  $x^2+y^2=\\alpha^2+\\alpha^2=2\\alpha^2$.\n\n2.  $x^2+y^2=(x)^2+y^2=(t+1)^2+2^2=t^2+2t+5$.\n\n3.  $x^2+y^2=(x)^2+(y)^2=(z+1)^2+(z-1)^2=z^2+2z+1+z^2-2z+1=2z^2+2$.\n::::\n:::"]}, {"t": "Div", "c": [["EX_FUNCTION_0", ["exercise"], [["data-number", "2.7.10"]]], [{"t": "Para", "c": [{"t": "Str", "c": "Which term is formed if the following object is inserted into the term "}, {"t": "Math", "c": [{"t": "InlineMath"}, "x^2+y^2"]}, {"t": "Str", "c": "?"}]}, {"t": "OrderedList", "c": [[1, {"t": "Decimal"}, {"t": "Period"}], [[{"t": "Para", "c": [{"t": "Str", "c": "The angle "}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\alpha"]}, {"t": "Str", "c": " both for "}, {"t": "Math", "c": [{"t": "InlineMath"}, "x"]}, {"t": "Str", "c": " and "}, {"t": "Math", "c": [{"t": "InlineMath"}, "y"]}, {"t": "Str", "c": ": Then "}, {"t": "Math", "c": [{"t": "InlineMath"}, "x^2+y^2"]}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\;\\;=\\;"]}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "function"], ["length", "13"], ["solution", "2*alpha^2"], ["supporting-points", "5"], ["variables", "alpha"], ["precision", "5"], ["points", "4"]]], []]}, {"t": "Str", "c": "."}]}], [{"t": "Para", "c": [{"t": "Str", "c": "The number "}, {"t": "Math", "c": [{"t": "InlineMath"}, "2"]}, {"t": "Str", "c": " for "}, {"t": "Math", "c": [{"t": "InlineMath"}, "y"]}, {"t": "Str", "c": " and the term "}, {"t": "Math", "c": [{"t": "InlineMath"}, "t+1"]}, {"t": "Str", "c": " for "}, {"t": "Math", "c": [{"t": "InlineMath"}, "x"]}, {"t": "Str", "c": ": Then "}, {"t": "Math", "c": [{"t": "InlineMath"}, "x^2+y^2"]}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\;\\;=\\;"]}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "function"], ["length", "13"], ["solution", "4+(t+1)^2"], ["supporting-points", "5"], ["variables", "t"], ["precision", "5"], ["points", "4"]]], []]}, {"t": "Str", "c": "."}]}], [{"t": "Para", "c": [{"t": "Str", "c": "The term "}, {"t": "Math", "c": [{"t": "InlineMath"}, "z+1"]}, {"t": "Str", "c": " for "}, {"t": "Math", "c": [{"t": "InlineMath"}, "x"]}, {"t": "Str", "c": " and the term "}, {"t": "Math", "c": [{"t": "InlineMath"}, "z-1"]}, {"t": "Str", "c": " for "}, {"t": "Math", "c": [{"t": "InlineMath"}, "y"]}, {"t": "Str", "c": ": Then "}, {"t": "Math", "c": [{"t": "InlineMath"}, "x^2+y^2"]}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\;\\;=\\;"]}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "function"], ["length", "13"], ["solution", "2*z*z+2"], ["supporting-points", "5"], ["variables", "z"], ["precision", "5"], ["points", "4"]]], []]}, {"t": "Str", "c": "."}]}]]]}, {"t": "Div", "c": [["", ["hint-text"], []], [{"t": "Para", "c": [{"t": "Str", "c": "The Greek letter "}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\alpha"]}, {"t": "Str", "c": " can be entered as "}, {"t": "Code", "c": [["", [], []], "alpha"]}, {"t": "Str", "c": "."}]}]]}, {"t": "Div", "c": [["", ["hint"], [["caption", "Solution"]]], [{"t": "Para", "c": [{"t": "Str", "c": "It is safest to bracket the variables before inserting, if the new term contains several symbols:"}]}, {"t": "OrderedList", "c": [[1, {"t": "Decimal"}, {"t": "Period"}], [[{"t": "Para", "c": [{"t": "Math", "c": [{"t": "InlineMath"}, "x^2+y^2=\\alpha^2+\\alpha^2=2\\alpha^2"]}, {"t": "Str", "c": "."}]}], [{"t": "Para", "c": [{"t": "Math", "c": [{"t": "InlineMath"}, "x^2+y^2=(x)^2+y^2=(t+1)^2+2^2=t^2+2t+5"]}, {"t": "Str", "c": "."}]}], [{"t": "Para", "c": [{"t": "Math", "c": [{"t": "InlineMath"}, "x^2+y^2=(x)^2+(y)^2=(z+1)^2+(z-1)^2=z^2+2z+1+z^2-2z+1=2z^2+2"]}, {"t": "Str", "c": "."}]}]]]}]]}]]}]]}, {"t": "Div", "c": [["example-2.7.11", ["example"], [["data-number", "2.7.11"]]], [{"t": "CodeBlock", "c": [["", [], []], "::: {.exercise #EX_FUNCTION_1}\nTransform into a sum:\n$a\\cdot(b+c)+c\\cdot(a+b)$$\\;\\;=\\;$[]{.question .text validation=\"function\" length=\"20\" solution=\"a*(b+c)+c*(a+b)\" supporting-points=\"3\" variables=\"a,b,c\" precision=\"3\" simplification=\"no-brackets\" points=\"4\"}.\n\n:::: {.hint caption=\"Solution\"}\n$$a\\cdot(b+c)+c\\cdot(a+b) \\;=\\; a b + a c + c a + c b \\;=\\; a b + 2 a c + b c$$\n::::\n:::"]}, {"t": "Div", "c": [["EX_FUNCTION_1", ["exercise"], [["data-number", "2.7.12"]]], [{"t": "Para", "c": [{"t": "Str", "c": "Transform into a sum: "}, {"t": "Math", "c": [{"t": "InlineMath"}, "a\\cdot(b+c)+c\\cdot(a+b)"]}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\;\\;=\\;"]}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "function"], ["length", "20"], ["solution", "a*(b+c)+c*(a+b)"], ["supporting-points", "3"], ["variables", "a,b,c"], ["precision", "3"], ["simplification", "no-brackets"], ["points", "4"]]], []]}, {"t": "Str", "c": "."}]}, {"t": "Div", "c": [["", ["hint"], [["caption", "Solution"]]], [{"t": "Para", "c": [{"t": "Math", "c": [{"t": "DisplayMath"}, "a\\cdot(b+c)+c\\cdot(a+b) \\;=\\; a b + a c + c a + c b \\;=\\; a b + 2 a c + b c"]}]}]]}]]}]]}, {"t": "Div", "c": [["example-2.7.13", ["example"], [["data-number", "2.7.13"]]], [{"t": "CodeBlock", "c": [["", [], []], "::: {.exercise #EX_FUNCTION_2}\nRewrite the following expression containing powers and roots as a simple power with a rational exponent:\n\n$\\dfrac{x^3}{\\left({\\sqrt{x}}\\right)^3}$$\\;\\;=\\;$[]{.question .text validation=\"function\" length=\"25\" solution=\"x^(3/2)\" supporting-points=\"10\" variables=\"x\" precision=\"5\" simplification=\"one-power-no-mult-or-div,special-support-points\" points=\"4\"}.\n\n[For example, enter $\\sqrt{x}\\cdot x^2$ = `x^(5/2)` or alternatively as `x^(2.5)`, mind the brackets around the fraction.]{.hint-text}\n\n:::: {.hint caption=\"Solution\"}\n$$x^{\\frac32}$$\n::::\n:::"]}, {"t": "Div", "c": [["EX_FUNCTION_2", ["exercise"], [["data-number", "2.7.14"]]], [{"t": "Para", "c": [{"t": "Str", "c": "Rewrite the following expression containing powers and roots as a simple power with a rational exponent:"}]}, {"t": "Para", "c": [{"t": "Math", "c": [{"t": "InlineMath"}, "\\dfrac{x^3}{\\left({\\sqrt{x}}\\right)^3}"]}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\;\\;=\\;"]}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "function"], ["length", "25"], ["solution", "x^(3/2)"], ["supporting-points", "10"], ["variables", "x"], ["precision", "5"], ["simplification", "one-power-no-mult-or-div,special-support-points"], ["points", "4"]]], []]}, {"t": "Str", "c": "."}]}, {"t": "Para", "c": [{"t": "Span", "c": [["", ["hint-text"], []], [{"t": "Str", "c": "For example, enter "}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\sqrt{x}\\cdot x^2"]}, {"t": "Str", "c": " = "}, {"t": "Code", "c": [["", [], []], "x^(5/2)"]}, {"t": "Str", "c": " or alternatively as "}, {"t": "Code", "c": [["", [], []], "x^(2.5)"]}, {"t": "Str", "c": ", mind the brackets around the fraction."}]]}]}, {"t": "Div", "c": [["", ["hint"], [["caption", "Solution"]]], [{"t": "Para", "c": [{"t": "Math", "c": [{"t": "DisplayMath"}, "x^{\\frac32}"]}]}]]}]]}]]}, {"t": "Header", "c": [2, ["interval", [], []], [{"t": "Str", "c": "Interval"}]]}, {"t": "BlockQuote", "c": [{"t": "Para", "c": [{"t": "Code", "c": [["", [], []], "validation=\"interval\""]}]}]}, {"t": "Para", "c": [{"t": "Str", "c": "The input is interpreted as an interval."}]}, {"t": "Table", "c": [["", [], []], [null, []], [[{"t": "AlignLeft"}, {"t": "ColWidthDefault"}], [{"t": "AlignLeft"}, {"t": "ColWidthDefault"}]], [["", [], []], []], [[["", [], []], 0, [], [[["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "precision"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Accuracy of the numerical value check"}]}]]]]]]], [["", [], []], []]]}, {"t": "Div", "c": [["example-2.7.15", ["example"], [["data-number", "2.7.15"]]], [{"t": "CodeBlock", "c": [["", [], []], "::: {.exercise #EX_INTERVAL}\nFind the solution set of the mixed equation $|x-3|\\cdot x=9$.\n\nIf $x$ is in the interval\n[]{.question .text validation=\"interval\" length=\"14\" solution=\"[3,infty)\" precision=\"5\" points=\"4\"}\nthe absolute value term is non-negative.\n:::\n\n::: {.hint caption=\"Solution\"}\nIf $x$ is in the interval $\\left[3; \\infty\\right[$ (`[3,infty)`) the absolute\nvalue term is non-negative.\n:::"]}, {"t": "Div", "c": [["EX_INTERVAL", ["exercise"], [["data-number", "2.7.16"]]], [{"t": "Para", "c": [{"t": "Str", "c": "Find the solution set of the mixed equation "}, {"t": "Math", "c": [{"t": "InlineMath"}, "|x-3|\\cdot x=9"]}, {"t": "Str", "c": "."}]}, {"t": "Para", "c": [{"t": "Str", "c": "If "}, {"t": "Math", "c": [{"t": "InlineMath"}, "x"]}, {"t": "Str", "c": " is in the interval "}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "interval"], ["length", "14"], ["solution", "[3,infty)"], ["precision", "5"], ["points", "4"]]], []]}, {"t": "Str", "c": " the absolute value term is non-negative."}]}]]}, {"t": "Div", "c": [["", ["hint"], [["caption", "Solution"]]], [{"t": "Para", "c": [{"t": "Str", "c": "If "}, {"t": "Math", "c": [{"t": "InlineMath"}, "x"]}, {"t": "Str", "c": " is in the interval "}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\left[3; \\infty\\right["]}, {"t": "Str", "c": " the absolute value term is non-negative."}]}, {"t": "Para", "c": [{"t": "Str", "c": "Type "}, {"t": "Code", "c": [["", [], []], "[3;infty)"]}, {"t": "Str", "c": "."}]}]]}]]}, {"t": "Header", "c": [2, ["exact-fraction", [], []], [{"t": "Str", "c": "Exact fraction"}]]}, {"t": "BlockQuote", "c": [{"t": "Para", "c": [{"t": "Code", "c": [["", [], []], "validation=\"exact-fraction\""]}]}]}, {"t": "Para", "c": [{"t": "Str", "c": "Die Eingabe muss \u00e4quivalent zur L\u00f6sung, maximal gek\u00fcrzt sein und einen positiven Nenner haben."}]}, {"t": "Table", "c": [["", [], []], [null, []], [[{"t": "AlignLeft"}, {"t": "ColWidthDefault"}], [{"t": "AlignLeft"}, {"t": "ColWidthDefault"}]], [["", [], []], []], [[["", [], []], 0, [], [[["", [], []], [[["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Code", "c": [["", [], []], "precision"]}]}]], [["", [], []], {"t": "AlignDefault"}, 1, 1, [{"t": "Plain", "c": [{"t": "Str", "c": "Accuracy of the numerical value check"}]}]]]]]]], [["", [], []], []]]}, {"t": "Div", "c": [["example-2.7.17", ["example"], [["data-number", "2.7.17"]]], [{"t": "CodeBlock", "c": [["", [], []], "::: {.exercise #EX_EXACT_FRACTION}\nCalculate the following numbers by finding the least common denominator and\nreducing as much as possible:\n\n1.  $\\dfrac12+\\dfrac13$$\\;\\;=\\;$[]{.question .text validation=\"exact-fraction\" length=\"10\" solution=\"5/6\" precision=\"5\" points=\"4\"} but $\\dfrac1{2+3}$$\\;\\;=\\;$[]{.question .text validation=\"exact-fraction\" length=\"12\" solution=\"1/5\" precision=\"5\" points=\"4\"}.\n\n2.  $\\dfrac{1+2}{5+6}$$\\;\\;=\\;$[]{.question .text validation=\"exact-fraction\" length=\"12\" solution=\"3/11\" precision=\"5\" points=\"4\"} but $\\dfrac15+\\dfrac26$$\\;\\;=\\;$[]{.question .text validation=\"exact-fraction\" length=\"12\" solution=\"8/15\" precision=\"5\" points=\"4\"}.\n\n:::: {.hint caption=\"Solution\"}\nSums of denominators may not be collected, not even in the case of like numerators. Here, we have\n\n$$\\dfrac12+\\dfrac13\\;=\\; \\dfrac{3}{6}+\\dfrac26 \\;=\\; \\dfrac56\\;\\;\\text{but}\\;\\;\\dfrac{1}{2+3} \\;=\\; \\dfrac15\\, .$$\n\nAlso, the simple \"splitting\" of fraction parts is not allowed, here we have\n\n$$\\dfrac{1+2}{5+6} \\;=\\; \\dfrac{3}{11}  \\;\\;\\text{but}\\;\\; \\dfrac15+\\dfrac26 \\;=\\; \\dfrac{6}{30}+\\dfrac{10}{30} \\;=\\; \\dfrac{16}{30}\\;=\\; \\dfrac{8}{15}\\, .$$\n::::\n:::"]}, {"t": "Div", "c": [["EX_EXACT_FRACTION", ["exercise"], [["data-number", "2.7.18"]]], [{"t": "Para", "c": [{"t": "Str", "c": "Calculate the following numbers by finding the least common denominator and reducing as much as possible:"}]}, {"t": "OrderedList", "c": [[1, {"t": "Decimal"}, {"t": "Period"}], [[{"t": "Para", "c": [{"t": "Math", "c": [{"t": "InlineMath"}, "\\dfrac12+\\dfrac13"]}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\;\\;=\\;"]}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "exact-fraction"], ["length", "10"], ["solution", "5/6"], ["precision", "5"], ["points", "4"]]], []]}, {"t": "Str", "c": " but "}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\dfrac1{2+3}"]}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\;\\;=\\;"]}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "exact-fraction"], ["length", "12"], ["solution", "1/5"], ["precision", "5"], ["points", "4"]]], []]}, {"t": "Str", "c": "."}]}], [{"t": "Para", "c": [{"t": "Math", "c": [{"t": "InlineMath"}, "\\dfrac{1+2}{5+6}"]}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\;\\;=\\;"]}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "exact-fraction"], ["length", "12"], ["solution", "3/11"], ["precision", "5"], ["points", "4"]]], []]}, {"t": "Str", "c": " but "}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\dfrac15+\\dfrac26"]}, {"t": "Math", "c": [{"t": "InlineMath"}, "\\;\\;=\\;"]}, {"t": "Span", "c": [["", ["question", "text"], [["validation", "exact-fraction"], ["length", "12"], ["solution", "8/15"], ["precision", "5"], ["points", "4"]]], []]}, {"t": "Str", "c": "."}]}]]]}, {"t": "Div", "c": [["", ["hint"], [["caption", "Solution"]]], [{"t": "Para", "c": [{"t": "Str", "c": "Sums of denominators may not be collected, not even in the case of like numerators. Here, we have"}]}, {"t": "Para", "c": [{"t": "Math", "c": [{"t": "DisplayMath"}, "\\dfrac12+\\dfrac13\\;=\\; \\dfrac{3}{6}+\\dfrac26 \\;=\\; \\dfrac56\\;\\;\\text{but}\\;\\;\\dfrac{1}{2+3} \\;=\\; \\dfrac15\\, ."]}]}, {"t": "Para", "c": [{"t": "Str", "c": "Also, the simple "}, {"t": "Quoted", "c": [{"t": "DoubleQuote"}, [{"t": "Str", "c": "splitting"}]]}, {"t": "Str", "c": " of fraction parts is not allowed, here we have"}]}, {"t": "Para", "c": [{"t": "Math", "c": [{"t": "DisplayMath"}, "\\dfrac{1+2}{5+6} \\;=\\; \\dfrac{3}{11}  \\;\\;\\text{but}\\;\\; \\dfrac15+\\dfrac26 \\;=\\; \\dfrac{6}{30}+\\dfrac{10}{30} \\;=\\; \\dfrac{16}{30}\\;=\\; \\dfrac{8}{15}\\, ."]}]}]]}]]}]]}]