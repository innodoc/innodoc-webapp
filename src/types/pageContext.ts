import type { LanguageCode } from 'iso-639-1'
import type { ElementType } from 'react'
import type { HelmetServerState } from 'react-helmet-async'
import type { PageContextBuiltIn } from 'vite-plugin-ssr'
import type { PageContextBuiltInClient } from 'vite-plugin-ssr/client/router'

import type { passToClientProps } from '#constants'
import type { RootState, Store } from '#store/makeStore'

import type { ApiCourse } from './entities/course'
import type { ApiPage } from './entities/page'

/** Custom client-side page context */
export type PageContextClient = Omit<PageContextBuiltInClient, 'Page'> &
  Pick<PageContextServer, 'Page' | typeof passToClientProps[number]>

/** Custom server-side page context */
export type PageContextServer = Omit<PageContextBuiltIn, 'Page'> & {
  /** Course name */
  courseName: ApiCourse['name']

  /** Styles generated by Emotion */
  emotionStyleTags: string

  /** Document head tags */
  helmet: HelmetServerState

  /** Current locale */
  locale: LanguageCode

  /** Page component */
  Page: ElementType

  /** Rendered page HTML */
  pageHtml: string

  /** Props to pass to page component */
  pageProps: PageProps

  /** Prepopulation task factories specific to current page */
  pagePrepopFactories: PrepopFactory[]

  /** Preloaded store state */
  preloadedState: RootState

  /** Instruct server to perform a redirect */
  redirectTo?: string
}

/** Props to render a page */
export type PageProps = {
  /** Page Id */
  pageName?: ApiPage['name']

  /** Section path */
  sectionPath?: string
}

/** Store prepopulation task factory function */
export type PrepopFactory = (store: Store, locale: LanguageCode) => Promise<unknown>
